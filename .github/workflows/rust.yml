name: 打包插件并发布到Releases

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: # 允许手动触发该工作流

env:
  CARGO_TERM_COLOR: always

jobs:
  build-in-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install cargo-bump
      run: cargo install cargo-bump

    - name: Bump version
      run: cargo bump patch # 或者使用 `minor` 或 `major` 根据需要

    - name: Build
      run: cargo build --verbose --release

    - name: Run tests
      run: cargo test --verbose

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version }}
        release_name: Release v${{ steps.bump_version.outputs.new_version }}
        draft: false
        prerelease: false


  build-in-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install cargo-bump
      run: cargo install cargo-bump

    - name: Bump version
      run: cargo bump patch # 或者使用 `minor` 或 `major` 根据需要

    - name: Build
      run: cargo build --verbose --release

    - name: Run tests
      run: cargo test --verbose

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version }}
        release_name: Release v${{ steps.bump_version.outputs.new_version }}
        draft: false
        prerelease: false